 
Міністерство освіти і науки України 
Харківський національний університет радіоелектроніки 
Кафедра програмної інженерії 
  
 
 
 
 
 
 
Практична робота №2
з дисципліни: «Архітектура програмного забезпечення» 
  
 
 
 
 
  
Виконав:                                                                               Перевірив: 
ст. гр. ПЗПІ-22-10                                                                cт. в. каф. ПІ
Заболотний Д.М.                                                                  Сокорчук І. П.  
 
                                                  	 	 	 	 
 
 
 
 
Харків 2025  
Архітектура відомих програмних систем

1Історія змін  
 
Таблиця 1.1 – Історія змін 
№ 	Дата 	Версія звіту 	Опис змін та виправлень 
1 	31.05.25 	0.1 	Додано титульну сторінку та розділ «Історія змін» 
2 	31.05.25 	0.2 	Додано розділ «Завдання до практичної роботи»
3 	31.05.25 	0.3 	Додано розділ «Опис виконаної роботи»
4 	31.05.25 	0.4 	Додано розділ «Висновки» 
5 	31.05.25 	0.5 	Додано додаток А
6 	31.05.25 	0.6 	Додано додаток Б
 	
 
2Завдання до практичної роботи 

Метою даної практичної роботи є глибоке дослідження архітектури відомої розподіленої системи Apache Kafka. Завдання передбачає аналіз ключових архітектурних рішень, принципів функціонування та особливостей реалізації, що забезпечують високу продуктивність, масштабованість та відмовостійкість. Кінцевим результатом роботи є формування технічного звіту та підготовка презентації, що візуалізує отримані знання про структуру та динаміку функціонування Apache Kafka.


3Опис виконаної роботи 

У рамках дослідження архітектури Apache Kafka був проведений комплексний аналіз її основних аспектів. На початковому етапі було вивчено історію створення системи, що зародилася в LinkedIn як інструмент для відстеження активності користувачів, та її еволюцію до сучасної розподіленої потокової платформи, що використовується тисячами компаній для різноманітних завдань, включаючи моніторинг, логування та інтеграцію мікросервісів.
Особлива увага приділялася ключовим концепціям та компонентам архітектури Kafka. Було детально розглянуто роль брокерів як основних серверів кластера, що відповідають за зберігання та обробку даних, а також за їх реплікацію для забезпечення відмовостійкості. Вивчено поняття тем як логічних категорій для організації даних та розділів (partitions) як одиниць горизонтального масштабування, що містять упорядковані послідовності записів. Досліджено функціональність офсетів як унікальних ідентифікаторів записів у розділах, що використовуються консьюмерами для відстеження позиції читання.
Проаналізовано принципи роботи Kafka, зокрема механізми персистентності даних у лог-файлах та використання індексних файлів для оптимізації читання. З'ясовано, як лог-структура забезпечує швидкий послідовний доступ до даних та як кеш операційної системи сприяє підвищенню продуктивності.
Важливим етапом стало дослідження ролі ZooKeeper як централізованого сервісу управління метаданими кластера Kafka. Було вивчено його функції з відстеження активних брокерів, вибору лідера-контролера та зберігання інформації про теми та розділи, а також його внесок у забезпечення відмовостійкості кластера.
Особливе місце в дослідженні зайняли виклики реалізації та особливості масштабування Apache Kafka. Детально розглянуто механізм реплікації даних як ключовий елемент відмовостійкості та надійності, що забезпечує доступність даних навіть при збоях брокерів. Проаналізовано концепцію In-Sync Replicas (ISR) та її роль у гарантуванні цілісності даних. Вивчено підходи до горизонтального масштабування шляхом додавання брокерів та розподілу розділів, а також обмеження масштабування консьюмерів.
На основі отриманих знань була розроблена презентація, яка візуалізує архітектурні зміни та ключові характеристики Kafka, ілюструючи взаємодію компонентів, механізми реплікації та масштабування.

4Висновки 

У результаті виконання практичної роботи проведено дослідження архітектури Apache Kafka. Отримані знання дозволили сформувати розуміння принципів побудови високопродуктивних та масштабованих розподілених потокових систем.
Аналіз функціональних компонентів, операційних принципів та архітектурних особливостей Kafka, спрямованих на ефективну обробку великих обсягів потокових даних, сприяв поглибленню теоретичних знань у цій предметній галузі. Презентація представляє результати роботи та підтверджує розуміння вивченого матеріалу. Практична робота дозволила розвинути аналітичні компетенції у сфері архітектури розподілених систем.
  	 


Додаток А 
Хронологічний опис та посилання 
 
 
Відеозапис доповіді на YouTube: https://youtu.be/PRVdFs_aRIg
Хронологічний опис доповіді: 
00:00 Вступ
00:11 Що таке Apache Kafka
01:25 Основні компоненти архітектури
02:13 Архітектура брокера. Зберігання даних
03:03 Що таке Zookeeper
03:59 Реплікація
05:14 Масштабування Apache Kafka
06:45 Забеспечення надійності в Kafka
08:01 Висновки
08:21 Список використаних джерел	 

Додаток Б 
Слайди презентації доповіді 
 
 
Рисунок Б.1 – Титульний слайд 
 
 
Рисунок Б.2 – Огляд Apache Kafka


Рисунок Б.3 – Опис основних компонентів системи


Рисунок Б.4 – Опис архітектури брокера та зберігання даних в Apache Kafka


Рисунок Б.5 – Визначення та роль Zookeeper в архітектурі Apache Kafka


Рисунок Б.6 – Реплікація в Apache Kafka


Рисунок Б.7 – Масштабування Kafka


Рисунок Б.8 – Опис забезпечення надійності в Apache Kafka


Рисунок Б.9 – Висновок


Рисунок Б.10 – Список використаних джерел
