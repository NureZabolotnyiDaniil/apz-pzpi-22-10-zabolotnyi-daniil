apiVersion: apps/v1
kind: Deployment
metadata:
  name: smartlighting-backend
  labels:
    app: smartlighting-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: smartlighting-backend
  template:
    metadata:
      labels:
        app: smartlighting-backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: smartlighting-backend
        image: nginx:alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: smartlighting-config
              key: DATABASE_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: smartlighting-secrets
              key: SECRET_KEY
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: smartlighting-config
              key: CORS_ORIGINS
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: smartlighting-backend-service
spec:
  selector:
    app: smartlighting-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer 